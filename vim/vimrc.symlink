" Set up vundle
set nocompatible
filetype off
set rtp+=$HOME/.vim/bundle/Vundle.vim
call vundle#begin()
" Install packages here
Plugin 'VundleVim/Vundle.vim'
Plugin 'scrooloose/nerdcommenter'
Plugin 'vim-airline/vim-airline'
Plugin 'vim-airline/vim-airline-themes'
Plugin 'tpope/vim-sleuth'
Plugin 'tpope/vim-fugitive'
Plugin 'crusoexia/vim-monokai'

call vundle#end()
filetype plugin indent on

" set the leader to ',' where it belongs
let mapleader=","
let maplocalleader="\\"

"get some mouse action
set mouse=a

" cursor keys should linewrap
set whichwrap+=<,>,h,l,[,]

" backspace fixing
set backspace=indent,eol,start

" color crap
syntax enable
set background=dark
colorscheme monokai

"Smart Search
nnoremap / /\v
vnoremap / /\v
set ignorecase
set smartcase
set incsearch
set hlsearch
" clear search buffer with leaderspace
nnoremap <leader><space> :nohlsearch<CR>

" fix tabs
set smarttab
set autoindent
set copyindent
set tabstop=2
set shiftwidth=2
set expandtab
set softtabstop=2

" fix dumb comment thing
autocmd FileType * setlocal formatoptions-=t formatoptions-=r formatoptions-=o

" show matching parens
set showmatch

" allow opening of a new buffer without saving
set hidden

" backups are dumb
set nobackup

" put all the swap files in one spot
set directory=$HOME/.vimswap//

" Turn on automatic rereading of files
set autoread

" stop beeping
set visualbell
set noerrorbells

" stop hitting f1 holy crap
inoremap <F1> <ESC>
nnoremap <F1> <ESC>
vnoremap <F1> <ESC>

" Return to most recent line when reopening a file
autocmd BufReadPost * if line("'\"") > 0 && line("'\"") <= line("$") | exe "normal! g`\"zz" | endif

" show bottom bar
set laststatus=2
set ruler
set showcmd

"airline
let g:airline#extensions#whitespace#enabled = 1
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#hunks#enabled = 0
let g:airline_powerline_fonts = 0

"Function for Hexedit mode
command -bar Hexmode call ToggleHex()
function ToggleHex()
    if !exists("b:editHex") || !b:editHex
        "Go to hex view
        let b:editHex=1
        %!xxd
    else
        "Go to text view
        let b:editHex=0
        %!xxd -r
    endif
endfunction

"The first time you press home got to the begining of the text
"The second time go to the begining of the line
function! SmartHome()
  let s:col = col(".")
  normal! ^
  if s:col == col(".")
    normal! 0
  endif
endfunction
nnoremap <silent> <Home> :call SmartHome()<CR>
inoremap <silent> <Home> <C-O>:call SmartHome()<CR>

"F2 now toggles the show line numbers
map <F2> :set invnumber<cr>a
map! <F2> <Esc>:set invnumber<cr>

"F4 removes ^M
map <F4> :set fileformat=unix<cr>
map! <F4> <Esc> :set fileformat=unix<cr>a

"This will delete extra spaces at the end of a line and will
"change tabs to spaces
map <F6> :retab<cr>:%s/\s\+$//<cr>
map! <F6> <Esc>:retab<cr>:%s/\s\+$//<cr>a

"Enable Hexedit mode
nnoremap <F8> :Hexmode<cr>
inoremap <F8> <Esc>:Hexmode<cr>a

"Buffer moving commands, but less typing
" new buffer
nmap <leader>T :enew<cr>

" move to next buffer
nmap <leader>l :bnext<cr>

" previous buffer
nmap <leader>h :bprevious<cr>

"close buffer and move to previous
nmap <leader>bq :bp <BAR> bd #<cr>

" show all open buffers
nmap <leader>bl :ls<cr>

" Allow saving of root files when I forget to sudo vim
cmap w!! w !sudo tee > /dev/null %

