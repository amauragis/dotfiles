" Pathogen
execute pathogen#infect()
filetype plugin indent on

" ditch vi stuff
set nocompatible

" get some mouse action
set mouse=a

" cursor keys should linewrap
set whichwrap+=<,>,h,l,[,]

" set the leader to ',' where it belongs
let mapleader = ","

" color crap
syntax enable
set background=dark
set t_Co=256
let g:solarized_termcolors=256
colorscheme solarized

"Smart Search
set ignorecase
set smartcase
set incsearch
set hlsearch

" fix tabs
set smarttab
set autoindent
set tabstop=2
set shiftwidth=2
set expandtab
set softtabstop=2

" backups are dumb
set nobackup


" Return to most recent line when reopening a file
autocmd BufReadPost * if line("'\"") > 0 && line("'\"") <= line("$") | exe "normal! g`\"zz" | endif

" show bottom bar
set laststatus=2
set ruler
set showcmd

"airline
let g:airline#extensions#whitespace#enabled = 0
let g:airline#extensions#hunks#enabled = 0
let g:airline_powerline_fonts = 0

"Function for Hexedit mode
command -bar Hexmode call ToggleHex()
function ToggleHex()
    if !exists("b:editHex") || !b:editHex
        "Go to hex view
        let b:editHex=1
        %!xxd
    else
        "Go to text view
        let b:editHex=0
        %!xxd -r
    endif
endfunction

"The first time you press home got to the begining of the text
"The second time go to the begining of the line
function! SmartHome()
  let s:col = col(".")
  normal! ^
  if s:col == col(".")
    normal! 0
  endif
endfunction
nnoremap <silent> <Home> :call SmartHome()<CR>
inoremap <silent> <Home> <C-O>:call SmartHome()<CR>

"F2 now toggles the show line numbers
map <F2> :set invnumber<cr>a
map! <F2> <Esc>:set invnumber<cr>

"F4 removes ^M
map <F4> :set fileformat=unix<cr>
map! <F4> <Esc> :set fileformat=unix<cr>a

"This will delete extra spaces at the end of a line and will
"change tabs to spaces
map <F6> :retab<cr>:%s/\s\+$//<cr>
map! <F6> <Esc>:retab<cr>:%s/\s\+$//<cr>a

"Enable Hexedit mode
nnoremap <F8> :Hexmode<cr>
inoremap <F8> <Esc>:Hexmode<cr>a

